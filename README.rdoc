= gem-manage-sources

gem-manage-sources is a replacement for the 'gem sources' command that allows you to easily use sources that may not always be available.

Imagine you work at a company that hosts its own gem server within the corporate network.  At work you need to install and update gems hosted on the corporate
server, but when you take your laptop home and try to work on some side projects (that don't use the company gems) all your remote gem commands fail.  So, you end up typing 'gem sources -a' and 'gem sources -r' a lot.

gem-manage-sources solves this problem by maintaining two list of gem servers (active and inactive) and checking whether or not gem servers are available.  If a server is unavailable it gets put on the inactive list and removed form your gem sources.  When it becomes availabl again it gets re-added to your list of gem sources.

== Installation

  gem install gem-manage-sources

== Usage

Before you use gem-manage-sources you need to initialize the lists of gem sources using:

  gem manage_sources --init

Now whenever you switch networks or want to check whether some of your sources are available use:

  gem manage_sources --check

gem-manage-sources is effectively a replacement for
  
  gem sources

In order to keep your gem sources in sync you should always use 
  
  gem manage_sources --add
  gem manage_sources --remove

in place of

  gem sources -a
  gem sources -r

I consider monkey-patching all of this functionality into the existing sources command, but that seemed really intrusive, especially before the whole idea has proven out.

== Links

* Bugtracker: http://github.com/britt/gem-manage-sources/issues
* Code Metrics: http://bit.ly/6CJtPx

== TODO

* JRuby (and *Ruby) support
* Find a better name

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2009 Britt Crawford. See LICENSE for details.
